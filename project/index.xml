<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Mario Sanchez Carrion</title>
    <link>https://www.mariosanchez.org/project/</link>
    <description>Recent content in Projects on Mario Sanchez Carrion</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.mariosanchez.org/project/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Demo Site with Node and Express</title>
      <link>https://www.mariosanchez.org/project/express/</link>
      <pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.mariosanchez.org/project/express/</guid>
      <description>Made with:  Node and Express
Project Summary:
A simple site made with Node and Express, showing dynamic routes.
Source Files | Live Demo
Before we go to our example site, let&amp;rsquo;s talk about Express:
Express is a web framework usually paired with Node. It is a light weight tool that makes it easy to build dynamic web applications.
Since Express is made with JavaScript, you can install it directly from NPM.</description>
    </item>
    
    <item>
      <title>How To Implement a Dark Theme Switch for your Site</title>
      <link>https://www.mariosanchez.org/project/dark/</link>
      <pubDate>Sun, 23 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.mariosanchez.org/project/dark/</guid>
      <description>Made with:  JavaScript
Project Summary:
Implement a dark theme for our site that we can activate at a click of a button.
Source Files | Demo
We will implement a dark theme selector for our site that visitors can activate by clicking on an icon. We will discuss what we have to do to the HTML, CSS and JavaScript files that make up our site to make that happen.</description>
    </item>
    
    <item>
      <title>Foreign Exchange Mobile Web App</title>
      <link>https://www.mariosanchez.org/project/fx/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.mariosanchez.org/project/fx/</guid>
      <description>Made with:  JavaScript
Project Summary:
Mobile-friendly FX watcher.
Source Files | Demo
We will create a mobile web app that will display the current exchange of a basket of currencies versus the US dollar. Besides the current rate we also want to display the YTD % devaluation (or revaluation) for each of the currencies.
I decided to implement this project because I work in international marketing, and devaluation is always an important variable to follow when analyzing business results.</description>
    </item>
    
    <item>
      <title>Airlines</title>
      <link>https://www.mariosanchez.org/project/airlines/</link>
      <pubDate>Tue, 21 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.mariosanchez.org/project/airlines/</guid>
      <description>Made with:  Python
Project Summary:
Submit the name of an airline and get its 2-charachter IATA symbol
Source Files
With this simple app we can type the name (or part of the name) of an airline in the form, and when we hit submit we will get a list of airlines that match that input followed by its IATA symbol. For example, you can type &amp;ldquo;american&amp;rdquo; in the search box:</description>
    </item>
    
    <item>
      <title>JavaScript Photo Gallery</title>
      <link>https://www.mariosanchez.org/project/photos/</link>
      <pubDate>Wed, 08 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.mariosanchez.org/project/photos/</guid>
      <description>Made with:  JavaScript
Project Summary:
A pleasantly styled image gallery that renders dynamically when the web page is called.
I wanted to post a few pictures from my trips and other activities here in the site. Looking around the web for ideas I settled on a simple square format for the pictures, with a subtle frame and a gray transparent rectangle for the description placed at the bottom of the photo:</description>
    </item>
    
    <item>
      <title>Stock Info Dashboards with ReactJS</title>
      <link>https://www.mariosanchez.org/project/stocksreact/</link>
      <pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.mariosanchez.org/project/stocksreact/</guid>
      <description>Made with:  React
Project Summary:
Web app to fetch stock info from an API and display it using React
Source Files | Live DemoUpdate: As of May 9, 2020, the API I was using to fecth the stock info has gone out of business so the values you will get in the Demo are all null. The functionality of the app, though, remains correct. I will update as soon as I find another free API.</description>
    </item>
    
    <item>
      <title>Progress Circle with JS and CSS</title>
      <link>https://www.mariosanchez.org/project/progresscircle/</link>
      <pubDate>Mon, 08 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.mariosanchez.org/project/progresscircle/</guid>
      <description>Made with:  JavaScript |  CSS
Project Summary:
JS app that creates an animated and stylish progress bar around a circle with the progress score written in the center.
Source Files | Live DemoI started with progressbar.js by Kimmo Brunfeldt, which does most of the heavy lifting. You can add it your project by including a link near your closing body tag to the CDN repository where progressbar.js resides.</description>
    </item>
    
    <item>
      <title>eCommerce App with Flask and SQLite</title>
      <link>https://www.mariosanchez.org/project/flaskecomm/</link>
      <pubDate>Tue, 25 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mariosanchez.org/project/flaskecomm/</guid>
      <description>Made with:  Python
Project Summary:
An eCommerce App built with Flask, Jinja, SQLite, jQuery and Bootstrap
Source Files This app was my CS50x final project.
The app loads a gallery of soccer shirts that includes: image, description, price, and a small form to add item to cart. The shirt info is stored in a SQLite database and is displayed using Bootstrap&amp;rsquo;s card class.
The app includes a series of filters implemented using SQLite queries so you can see only shirts that match a certain filter: shirts by region, clubs vs.</description>
    </item>
    
    <item>
      <title>Micro Blog Front End with React</title>
      <link>https://www.mariosanchez.org/project/micro-blog/</link>
      <pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mariosanchez.org/project/micro-blog/</guid>
      <description>Made with:  ReactJS
Project Summary:
Micro-blog simulator made with ReactJS. Makes use of components and state. Includes a log-in form, an entry form for blog posts, and a list of posts in reverse chronological order.
Source Files | Live DemoThis front end project is inspired in a minimal version of Twitter. We use React components and JavaScript ES6 classes, and put into practice the concept of state. It also uses JSX syntax.</description>
    </item>
    
    <item>
      <title>Real Estate Website with Bootstrap</title>
      <link>https://www.mariosanchez.org/project/rei/</link>
      <pubDate>Fri, 02 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.mariosanchez.org/project/rei/</guid>
      <description>Made with:  HTML |  CSS |  JavaScript
Project Summary:
Responsive company website for a real estate investments business.
Source Files | Live DemoThe objective was to design a clean, efficient, and fully responsive website for a real estate investments business. It needed to clearly describe what the company did, and include easy to follow call-to-actions throughout the site.
It was made using the Agency template for Bootstrap, a fully functional form by Formspree, and several jQuery plugins for smooth transitions and a carrousel of testimonials.</description>
    </item>
    
    <item>
      <title>Basic Calculator with JS and CSS</title>
      <link>https://www.mariosanchez.org/project/calc/</link>
      <pubDate>Sat, 18 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.mariosanchez.org/project/calc/</guid>
      <description>Made with:  JavaScript |  CSS
Project Summary:
Basic calculator to add, subtract, multiply and divide.
Source Files | Live DemoProject involved creating the calculator interface with HTML and CSS and then adding fuctionality through event handlers and callback functions. It works fine, with some improvements yet to be made, like limiting the display to a certain number of digits so that they fit in the calculator window when the number is too large.</description>
    </item>
    
    <item>
      <title>Building a Single Page Application with AngularJS</title>
      <link>https://www.mariosanchez.org/project/angular/</link>
      <pubDate>Tue, 02 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.mariosanchez.org/project/angular/</guid>
      <description>Made with:  Angular
Project Summary:
Create a barebones brochure site CPA using Angular
Source Files | Demo
A few weeks ago I came across the concept of SPA, or Single Page Application, and learned that they can be created with Angular.js, a JavaScript library supported by Google.
Most definitions of SPA you can find online are very technical and full of jargon, so perhaps the best way a newbie web developer like me can understand it is with an example:</description>
    </item>
    
  </channel>
</rss>